@using Cat_Food_Ingredient_Analyzer.Models;
@model Cat_Food_Ingredient_Analyzer.Models.ResultVM

@{
    ViewBag.Title = "Analyzer";
    decimal score = 0;
    decimal count = 0;
}

<h2>🐱 Food</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Food.Brand, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Food.Brand, new { htmlAttributes = new { @class = "form-control reset" } })
                @Html.ValidationMessageFor(model => model.Food.Brand, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Food.FoodName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Food.FoodName, new { htmlAttributes = new { @class = "form-control reset" } })
                @Html.ValidationMessageFor(model => model.Food.FoodName, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Food.Mass, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Food.Mass, new { htmlAttributes = new { @class = "form-control reset" } })
                @Html.ValidationMessageFor(model => model.Food.Mass, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.Food.UnitOfMass, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EnumDropDownListFor(model => model.Food.UnitOfMass, new { @class = "form-control", required = "required" })
                @Html.ValidationMessageFor(model => model.Food.UnitOfMass, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Food.Price, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.EditorFor(model => model.Food.Price, new { htmlAttributes = new { @class = "form-control reset" } })
                @Html.ValidationMessageFor(model => model.Food.Price, "", new { @class = "text-danger" })
            </div>
            @Html.LabelFor(model => model.Food.CurrencyOfPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-4">
                @Html.DropDownListFor(m => m.Food.CurrencyOfPrice, (IEnumerable<SelectListItem>)ViewBag.CurrencyOrderByFrequencies, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Food.CurrencyOfPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Food.Ingredients, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Food.Ingredients, new { @class = "form-control reset" })
                @Html.ValidationMessageFor(model => model.Food.Ingredients, "", new { @class = "text-danger" })
            </div>
        </div>
        @*<div class="form-group">
                @Html.LabelFor(model => model.ForLifeStage, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.ForLifeStage, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ForLifeStage, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Analyze" class="btn btn-default " />
                <button id="buttonReset" class="btn btn-default ">Reset</button>
            </div>
        </div>
    </div>
}

@if (Model != null)
{
    if (Model.Infos != null)
    {
        count = Model.Infos.Count;
        <div id="myDiv" class="col-md-7 form-group">
            <h2>Ingredients</h2>
            @foreach (Info info in Model.Infos)
            {
                score = score + info.Score;

                if (info.Score < 0)
                {
                    <span class="mistyRose">@info.Keyword</span><span>, </span>
                }
                else if (info.Score > 0)
                {
                    <span class="nyanza ">@info.Keyword</span><span>, </span>
                }
                else
                {
                    <span class="">@info.Keyword</span><span>, </span>
                }
            }
            @if (count > 0)
            {
                score = score / count;
            }
        </div>
        <div class="col-md-5 form-group">
            <h3>Score: @score.ToString("0.##")</h3>
            <div>
                <!-- Bootstrap Accordion-->
                <div class="panel-group accordion offset-top-0" role="tablist" aria-multiselectable="true" id="accordion-1">
                    @foreach (Info i in Model.Infos)
                    {
                        if (!string.IsNullOrEmpty(i.Reason) && !string.IsNullOrWhiteSpace(i.Reason))
                        {
                            <div class="panel panel-default ">
                                <div class="panel-heading @(i.Score>0?"whiteSmoke":"isabelline")  " role="tab" id='@("heading"+Model.Infos.IndexOf(i))'>
                                    <a class="collapsed colorBlack" role="button" data-toggle="collapse" data-parent="#accordion-1" href='@("#collapse"+Model.Infos.IndexOf(i))' aria-expanded="true">
                                        <div class="panel-title">
                                            @i.Keyword
                                        </div>
                                    </a>
                                </div>
                                <div class="panel-collapse collapse" role="tabpanel" aria-labelledby='@("heading"+Model.Infos.IndexOf(i))' id='@("collapse"+Model.Infos.IndexOf(i))'>
                                    <div class="panel-body">
                                        <div class="form-group">
                                            @i.Reason
                                        </div>
                                        @if (!string.IsNullOrEmpty(i.Link) && !string.IsNullOrWhiteSpace(i.Link))
                                        {
                                            <a href="@i.Link" target="_blank">Read more</a>
                                        }
                                    </div>
                                </div>
                            </div>
                        }
                    }
                </div>
            </div>
        </div>
    }
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
    <script>
        var datas = null;
        $(document).ready(function () {
            $("#Food_Brand").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "/Home/brands",
                        type: "POST",
                        dataType: "json",
                        data: { s: $("#Food_Brand").val().trim() },
                        success: function (data) {
                            response($.map(data, function (item) {
                                return { label: item.BrandName, value: item.BrandName };
                            }))
                        }
                    })
                }
            });
        });
        $(document).ready(function () {
            $("#Food_FoodName").autocomplete({
                source: function (request, response) {
                    $.ajax({
                        url: "/Home/FoodNames",
                        type: "POST",
                        dataType: "json",
                        data: {
                            BrandName: $("#Food_Brand").val().trim(),
                            FoodName: $("#Food_FoodName").val().trim()
                        },
                        success: function (data) {
                            datas = data;
                            response($.map(data, function (item) {
                                return { label: item.FoodName, value: item.FoodName };
                            }))
                        }
                    })
                }
            });

            $('#Food_FoodName').on('autocompleteselect input propertychange paste change click keyup', function (event, ui) {
                for (var i = 0, len = datas.length; i < len; ++i) {
                    if (datas[i].FoodName === this.value) {
                        $('#Food_Ingredients').val(datas[i].Ingredients);
                        $('#Food_Mass').val(datas[i].Mass);
                        $('#Food_UnitOfMass').val(datas[i].UnitOfMass);
                        $('#Food_Price').val(datas[i].Price);
                        $('#Food_CurrencyOfPrice').val(datas[i].CurrencyOfPrice);
                        break;
                    }
                }
            });

            if (@((Model.Infos==null?0:1))) {
                $('html, body').animate({
                    scrollTop: $("#myDiv").offset().top-51
                }, 2000);
                //$("html, body").animate({ scrollTop: $(document).height() - $(window).height() });
            }
        });

        $("#buttonReset").click(function () {
            $('.reset').val('');
        });
    </script>
}