@model Cat_Food_Ingredient_Analyzer.Models.ResultVM

@{
    ViewBag.Title = "Analyzer";
    decimal score = 0;
    decimal count = 0;
}

<h2>🐱 Food</h2>

@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        @*<div class="form-group">
                @Html.LabelFor(model => model.Food.Brand, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Food.Brand, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Food.Brand, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Food.Name, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Food.Name, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Food.Name, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Food.Mass, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Food.Mass, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Food.Mass, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Food.UnitOfMass, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.Food.UnitOfMass, new { @class = "form-control", required = "required" })
                    @Html.ValidationMessageFor(model => model.Food.UnitOfMass, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Food.Price, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Food.Price, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Food.Price, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Food.CurrencyOfPrice, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Food.CurrencyOfPrice, new { htmlAttributes = new { @class = "form-control", Value = "MYR" } })
                    @Html.ValidationMessageFor(model => model.Food.CurrencyOfPrice, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            @Html.LabelFor(model => model.Food.Ingredients, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Food.Ingredients, new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.Food.Ingredients, "", new { @class = "text-danger" })
            </div>
        </div>
        @*<div class="form-group">
                @Html.LabelFor(model => model.ForLifeStage, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EnumDropDownListFor(model => model.ForLifeStage, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ForLifeStage, "", new { @class = "text-danger" })
                </div>
            </div>*@

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Analyze" class="btn btn-default" />
            </div>
        </div>
    </div>
}

@if (Model != null)
{
    <h2>Ingredients</h2>
    <div>
        @foreach (KeyValuePair<string, decimal> k in Model.IngredientScore)
        {
            score = score + k.Value;

            if (k.Value < 0)
            {
                ++count;
                <span><span class="red">@k.Key</span>, </span>
            }
            else if (k.Value > 0)
            {
                ++count;
                <span><span class="green">@k.Key</span>, </span>
            }
            else
            {
                <span>@k.Key, </span>
            }
        }
    </div>
    score = score / count;
    <h3>Score: @score.ToString("0.##")</h3>
}

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
